export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"

if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
  startx "$XDG_CONFIG_HOME/X11/xinitrc"
fi

export PATH="$HOME/.local/bin:$PATH"

ZSH=/usr/share/oh-my-zsh/

# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Disable command auto-correction.
ENABLE_CORRECTION="false"

plugins=(git ruby)

source $ZSH/oh-my-zsh.sh

source /usr/share/zsh/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh
() {
   local -a prefix=( '\e'{\[,O} )
   local -a up=( ${^prefix}A ) down=( ${^prefix}B )
   local key=
   for key in $up[@]; do
      bindkey "$key" up-line-or-history
   done
   for key in $down[@]; do
      bindkey "$key" down-line-or-history
   done
}

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

eval "$(starship init zsh)"

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/bit bit

export DIRENV_LOG_FORMAT=
eval "$(direnv hook zsh)"

eval "$(zoxide init zsh)"

eval "$(/usr/bin/mise activate zsh)"

source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh

complete -o nospace -C /usr/bin/terraform terraform

# if [ -n "$DESKTOP_SESSION" ];then # Disabled for GPG reset
#     eval $(gnome-keyring-daemon --start) # Disabled for GPG reset
#     export SSH_AUTH_SOCK # Disabled for GPG reset
# fi # Disabled for GPG reset

# Make openssh read from XDG_CONFIG_HOME
# SSH_CONFIG="-F ${XDG_CONFIG_HOME}/ssh/config"
# alias ssh="TERM=xterm-256color ssh $SSH_CONFIG"

# Make awscli read from XDG directories
# https://github.com/aws/aws-sdk/issues/30
export AWS_CONFIG_FILE="$XDG_CONFIG_HOME"/aws/config
export AWS_CLI_HISTORY_FILE="$XDG_DATA_HOME"/aws/history
export AWS_CREDENTIALS_FILE="$XDG_DATA_HOME"/aws/credentials
export AWS_WEB_IDENTITY_TOKEN_FILE="$XDG_DATA_HOME"/aws/token
export AWS_SHARED_CREDENTIALS_FILE="$XDG_DATA_HOME"/aws/shared-credentials

export CARGO_HOME="$XDG_DATA_HOME"/cargo

export AWS_VAULT_BACKEND=file

# export GNUPGHOME="$XDG_DATA_HOME"/gnupg # Disabled for GPG reset

export XINITRC="$XDG_CONFIG_HOME"/X11/xinitrc

export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpg-connect-agent updatestartuptty /bye > /dev/null
